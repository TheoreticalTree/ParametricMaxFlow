// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs-realtime-OVapi.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "gtfs-realtime-OVapi.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace transit_realtime {
class OVapiTripDescriptorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVapiTripDescriptor> {
} _OVapiTripDescriptor_default_instance_;
class OVapiVehiclePositionDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVapiVehiclePosition> {
} _OVapiVehiclePosition_default_instance_;
class OVapiTripUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVapiTripUpdate> {
} _OVapiTripUpdate_default_instance_;
class OVapiStopTimeUpdateDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVapiStopTimeUpdate> {
} _OVapiStopTimeUpdate_default_instance_;
class OVapiVehicleDescriptorDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OVapiVehicleDescriptor> {
} _OVapiVehicleDescriptor_default_instance_;

namespace protobuf_gtfs_2drealtime_2dOVapi_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[5];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripDescriptor, realtime_trip_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripDescriptor, trip_short_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripDescriptor, commercial_mode_id_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehiclePosition, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehiclePosition, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehiclePosition, delay_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiTripUpdate, trip_headsign_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, stop_headsign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, scheduled_track_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, actual_track_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiStopTimeUpdate, station_id_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehicleDescriptor, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehicleDescriptor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehicleDescriptor, wheelchair_accessible_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehicleDescriptor, vehicle_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OVapiVehicleDescriptor, vehicle_headsign_),
  2,
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(OVapiTripDescriptor)},
  { 10, 15, sizeof(OVapiVehiclePosition)},
  { 16, 21, sizeof(OVapiTripUpdate)},
  { 22, 30, sizeof(OVapiStopTimeUpdate)},
  { 34, 41, sizeof(OVapiVehicleDescriptor)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVapiTripDescriptor_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVapiVehiclePosition_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVapiTripUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVapiStopTimeUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OVapiVehicleDescriptor_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "gtfs-realtime-OVapi.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

}  // namespace

void TableStruct::Shutdown() {
  _OVapiTripDescriptor_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _OVapiVehiclePosition_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _OVapiTripUpdate_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _OVapiStopTimeUpdate_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _OVapiVehicleDescriptor_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::transit_realtime::protobuf_gtfs_2drealtime_2eproto::InitDefaults();
  _OVapiTripDescriptor_default_instance_.DefaultConstruct();
  _OVapiVehiclePosition_default_instance_.DefaultConstruct();
  _OVapiTripUpdate_default_instance_.DefaultConstruct();
  _OVapiStopTimeUpdate_default_instance_.DefaultConstruct();
  _OVapiVehicleDescriptor_default_instance_.DefaultConstruct();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::transit_realtime::TripDescriptor::internal_default_instance(),
    1003, 11, false, false,
    ::transit_realtime::OVapiTripDescriptor::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::transit_realtime::VehiclePosition::internal_default_instance(),
    1003, 11, false, false,
    ::transit_realtime::OVapiVehiclePosition::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::transit_realtime::TripUpdate::internal_default_instance(),
    1003, 11, false, false,
    ::transit_realtime::OVapiTripUpdate::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::transit_realtime::TripUpdate_StopTimeUpdate::internal_default_instance(),
    1003, 11, false, false,
    ::transit_realtime::OVapiStopTimeUpdate::internal_default_instance());
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    ::transit_realtime::VehicleDescriptor::internal_default_instance(),
    1003, 11, false, false,
    ::transit_realtime::OVapiVehicleDescriptor::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031gtfs-realtime-OVapi.proto\022\020transit_rea"
      "ltime\032\023gtfs-realtime.proto\"d\n\023OVapiTripD"
      "escriptor\022\030\n\020realtime_trip_id\030\001 \001(\t\022\027\n\017t"
      "rip_short_name\030\002 \001(\t\022\032\n\022commercial_mode_"
      "id\030\003 \001(\t\"%\n\024OVapiVehiclePosition\022\r\n\005dela"
      "y\030\001 \001(\005\"(\n\017OVapiTripUpdate\022\025\n\rtrip_heads"
      "ign\030\001 \001(\t\"o\n\023OVapiStopTimeUpdate\022\025\n\rstop"
      "_headsign\030\001 \001(\t\022\027\n\017scheduled_track\030\002 \001(\t"
      "\022\024\n\014actual_track\030\003 \001(\t\022\022\n\nstation_id\030\004 \001"
      "(\t\"g\n\026OVapiVehicleDescriptor\022\035\n\025wheelcha"
      "ir_accessible\030\001 \001(\010\022\024\n\014vehicle_type\030\002 \001("
      "\t\022\030\n\020vehicle_headsign\030\003 \001(\t:f\n\024ovapi_tri"
      "pdescriptor\022 .transit_realtime.TripDescr"
      "iptor\030\353\007 \001(\0132%.transit_realtime.OVapiTri"
      "pDescriptor:j\n\026ovapi_vehicle_position\022!."
      "transit_realtime.VehiclePosition\030\353\007 \001(\0132"
      "&.transit_realtime.OVapiVehiclePosition:"
      "[\n\021ovapi_trip_update\022\034.transit_realtime."
      "TripUpdate\030\353\007 \001(\0132!.transit_realtime.OVa"
      "piTripUpdate:s\n\026ovapi_stop_time_update\022+"
      ".transit_realtime.TripUpdate.StopTimeUpd"
      "ate\030\353\007 \001(\0132%.transit_realtime.OVapiStopT"
      "imeUpdate:p\n\030ovapi_vehicle_descriptor\022#."
      "transit_realtime.VehicleDescriptor\030\353\007 \001("
      "\0132(.transit_realtime.OVapiVehicleDescrip"
      "torB\035\n\033com.google.transit.realtime"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1034);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "gtfs-realtime-OVapi.proto", &protobuf_RegisterTypes);
  ::transit_realtime::protobuf_gtfs_2drealtime_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_gtfs_2drealtime_2dOVapi_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVapiTripDescriptor::kRealtimeTripIdFieldNumber;
const int OVapiTripDescriptor::kTripShortNameFieldNumber;
const int OVapiTripDescriptor::kCommercialModeIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVapiTripDescriptor::OVapiTripDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transit_realtime.OVapiTripDescriptor)
}
OVapiTripDescriptor::OVapiTripDescriptor(const OVapiTripDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  realtime_trip_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_realtime_trip_id()) {
    realtime_trip_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realtime_trip_id_);
  }
  trip_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trip_short_name()) {
    trip_short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trip_short_name_);
  }
  commercial_mode_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_commercial_mode_id()) {
    commercial_mode_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commercial_mode_id_);
  }
  // @@protoc_insertion_point(copy_constructor:transit_realtime.OVapiTripDescriptor)
}

void OVapiTripDescriptor::SharedCtor() {
  _cached_size_ = 0;
  realtime_trip_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trip_short_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commercial_mode_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OVapiTripDescriptor::~OVapiTripDescriptor() {
  // @@protoc_insertion_point(destructor:transit_realtime.OVapiTripDescriptor)
  SharedDtor();
}

void OVapiTripDescriptor::SharedDtor() {
  realtime_trip_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  trip_short_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  commercial_mode_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OVapiTripDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVapiTripDescriptor::descriptor() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[0].descriptor;
}

const OVapiTripDescriptor& OVapiTripDescriptor::default_instance() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVapiTripDescriptor* OVapiTripDescriptor::New(::google::protobuf::Arena* arena) const {
  OVapiTripDescriptor* n = new OVapiTripDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVapiTripDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.OVapiTripDescriptor)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_realtime_trip_id()) {
      GOOGLE_DCHECK(!realtime_trip_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*realtime_trip_id_.UnsafeRawStringPointer())->clear();
    }
    if (has_trip_short_name()) {
      GOOGLE_DCHECK(!trip_short_name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*trip_short_name_.UnsafeRawStringPointer())->clear();
    }
    if (has_commercial_mode_id()) {
      GOOGLE_DCHECK(!commercial_mode_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*commercial_mode_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OVapiTripDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transit_realtime.OVapiTripDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string realtime_trip_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_realtime_trip_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->realtime_trip_id().data(), this->realtime_trip_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiTripDescriptor.realtime_trip_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string trip_short_name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trip_short_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trip_short_name().data(), this->trip_short_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiTripDescriptor.trip_short_name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string commercial_mode_id = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_commercial_mode_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->commercial_mode_id().data(), this->commercial_mode_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiTripDescriptor.commercial_mode_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transit_realtime.OVapiTripDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transit_realtime.OVapiTripDescriptor)
  return false;
#undef DO_
}

void OVapiTripDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transit_realtime.OVapiTripDescriptor)
  // optional string realtime_trip_id = 1;
  if (has_realtime_trip_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realtime_trip_id().data(), this->realtime_trip_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.realtime_trip_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->realtime_trip_id(), output);
  }

  // optional string trip_short_name = 2;
  if (has_trip_short_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trip_short_name().data(), this->trip_short_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.trip_short_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->trip_short_name(), output);
  }

  // optional string commercial_mode_id = 3;
  if (has_commercial_mode_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commercial_mode_id().data(), this->commercial_mode_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.commercial_mode_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->commercial_mode_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transit_realtime.OVapiTripDescriptor)
}

::google::protobuf::uint8* OVapiTripDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.OVapiTripDescriptor)
  // optional string realtime_trip_id = 1;
  if (has_realtime_trip_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->realtime_trip_id().data(), this->realtime_trip_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.realtime_trip_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->realtime_trip_id(), target);
  }

  // optional string trip_short_name = 2;
  if (has_trip_short_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trip_short_name().data(), this->trip_short_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.trip_short_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->trip_short_name(), target);
  }

  // optional string commercial_mode_id = 3;
  if (has_commercial_mode_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->commercial_mode_id().data(), this->commercial_mode_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripDescriptor.commercial_mode_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->commercial_mode_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.OVapiTripDescriptor)
  return target;
}

size_t OVapiTripDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.OVapiTripDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string realtime_trip_id = 1;
    if (has_realtime_trip_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->realtime_trip_id());
    }

    // optional string trip_short_name = 2;
    if (has_trip_short_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->trip_short_name());
    }

    // optional string commercial_mode_id = 3;
    if (has_commercial_mode_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->commercial_mode_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVapiTripDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transit_realtime.OVapiTripDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const OVapiTripDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVapiTripDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transit_realtime.OVapiTripDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transit_realtime.OVapiTripDescriptor)
    MergeFrom(*source);
  }
}

void OVapiTripDescriptor::MergeFrom(const OVapiTripDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.OVapiTripDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_realtime_trip_id()) {
      set_has_realtime_trip_id();
      realtime_trip_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.realtime_trip_id_);
    }
    if (from.has_trip_short_name()) {
      set_has_trip_short_name();
      trip_short_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trip_short_name_);
    }
    if (from.has_commercial_mode_id()) {
      set_has_commercial_mode_id();
      commercial_mode_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.commercial_mode_id_);
    }
  }
}

void OVapiTripDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transit_realtime.OVapiTripDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVapiTripDescriptor::CopyFrom(const OVapiTripDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.OVapiTripDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVapiTripDescriptor::IsInitialized() const {
  return true;
}

void OVapiTripDescriptor::Swap(OVapiTripDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVapiTripDescriptor::InternalSwap(OVapiTripDescriptor* other) {
  realtime_trip_id_.Swap(&other->realtime_trip_id_);
  trip_short_name_.Swap(&other->trip_short_name_);
  commercial_mode_id_.Swap(&other->commercial_mode_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVapiTripDescriptor::GetMetadata() const {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVapiTripDescriptor

// optional string realtime_trip_id = 1;
bool OVapiTripDescriptor::has_realtime_trip_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OVapiTripDescriptor::set_has_realtime_trip_id() {
  _has_bits_[0] |= 0x00000001u;
}
void OVapiTripDescriptor::clear_has_realtime_trip_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void OVapiTripDescriptor::clear_realtime_trip_id() {
  realtime_trip_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_realtime_trip_id();
}
const ::std::string& OVapiTripDescriptor::realtime_trip_id() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
  return realtime_trip_id_.GetNoArena();
}
void OVapiTripDescriptor::set_realtime_trip_id(const ::std::string& value) {
  set_has_realtime_trip_id();
  realtime_trip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
}
#if LANG_CXX11
void OVapiTripDescriptor::set_realtime_trip_id(::std::string&& value) {
  set_has_realtime_trip_id();
  realtime_trip_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
}
#endif
void OVapiTripDescriptor::set_realtime_trip_id(const char* value) {
  set_has_realtime_trip_id();
  realtime_trip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
}
void OVapiTripDescriptor::set_realtime_trip_id(const char* value, size_t size) {
  set_has_realtime_trip_id();
  realtime_trip_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
}
::std::string* OVapiTripDescriptor::mutable_realtime_trip_id() {
  set_has_realtime_trip_id();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
  return realtime_trip_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiTripDescriptor::release_realtime_trip_id() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
  clear_has_realtime_trip_id();
  return realtime_trip_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiTripDescriptor::set_allocated_realtime_trip_id(::std::string* realtime_trip_id) {
  if (realtime_trip_id != NULL) {
    set_has_realtime_trip_id();
  } else {
    clear_has_realtime_trip_id();
  }
  realtime_trip_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), realtime_trip_id);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiTripDescriptor.realtime_trip_id)
}

// optional string trip_short_name = 2;
bool OVapiTripDescriptor::has_trip_short_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OVapiTripDescriptor::set_has_trip_short_name() {
  _has_bits_[0] |= 0x00000002u;
}
void OVapiTripDescriptor::clear_has_trip_short_name() {
  _has_bits_[0] &= ~0x00000002u;
}
void OVapiTripDescriptor::clear_trip_short_name() {
  trip_short_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trip_short_name();
}
const ::std::string& OVapiTripDescriptor::trip_short_name() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiTripDescriptor.trip_short_name)
  return trip_short_name_.GetNoArena();
}
void OVapiTripDescriptor::set_trip_short_name(const ::std::string& value) {
  set_has_trip_short_name();
  trip_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiTripDescriptor.trip_short_name)
}
#if LANG_CXX11
void OVapiTripDescriptor::set_trip_short_name(::std::string&& value) {
  set_has_trip_short_name();
  trip_short_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiTripDescriptor.trip_short_name)
}
#endif
void OVapiTripDescriptor::set_trip_short_name(const char* value) {
  set_has_trip_short_name();
  trip_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiTripDescriptor.trip_short_name)
}
void OVapiTripDescriptor::set_trip_short_name(const char* value, size_t size) {
  set_has_trip_short_name();
  trip_short_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiTripDescriptor.trip_short_name)
}
::std::string* OVapiTripDescriptor::mutable_trip_short_name() {
  set_has_trip_short_name();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiTripDescriptor.trip_short_name)
  return trip_short_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiTripDescriptor::release_trip_short_name() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiTripDescriptor.trip_short_name)
  clear_has_trip_short_name();
  return trip_short_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiTripDescriptor::set_allocated_trip_short_name(::std::string* trip_short_name) {
  if (trip_short_name != NULL) {
    set_has_trip_short_name();
  } else {
    clear_has_trip_short_name();
  }
  trip_short_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trip_short_name);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiTripDescriptor.trip_short_name)
}

// optional string commercial_mode_id = 3;
bool OVapiTripDescriptor::has_commercial_mode_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OVapiTripDescriptor::set_has_commercial_mode_id() {
  _has_bits_[0] |= 0x00000004u;
}
void OVapiTripDescriptor::clear_has_commercial_mode_id() {
  _has_bits_[0] &= ~0x00000004u;
}
void OVapiTripDescriptor::clear_commercial_mode_id() {
  commercial_mode_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_commercial_mode_id();
}
const ::std::string& OVapiTripDescriptor::commercial_mode_id() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
  return commercial_mode_id_.GetNoArena();
}
void OVapiTripDescriptor::set_commercial_mode_id(const ::std::string& value) {
  set_has_commercial_mode_id();
  commercial_mode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
}
#if LANG_CXX11
void OVapiTripDescriptor::set_commercial_mode_id(::std::string&& value) {
  set_has_commercial_mode_id();
  commercial_mode_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
}
#endif
void OVapiTripDescriptor::set_commercial_mode_id(const char* value) {
  set_has_commercial_mode_id();
  commercial_mode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
}
void OVapiTripDescriptor::set_commercial_mode_id(const char* value, size_t size) {
  set_has_commercial_mode_id();
  commercial_mode_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
}
::std::string* OVapiTripDescriptor::mutable_commercial_mode_id() {
  set_has_commercial_mode_id();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
  return commercial_mode_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiTripDescriptor::release_commercial_mode_id() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
  clear_has_commercial_mode_id();
  return commercial_mode_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiTripDescriptor::set_allocated_commercial_mode_id(::std::string* commercial_mode_id) {
  if (commercial_mode_id != NULL) {
    set_has_commercial_mode_id();
  } else {
    clear_has_commercial_mode_id();
  }
  commercial_mode_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), commercial_mode_id);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiTripDescriptor.commercial_mode_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVapiVehiclePosition::kDelayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVapiVehiclePosition::OVapiVehiclePosition()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transit_realtime.OVapiVehiclePosition)
}
OVapiVehiclePosition::OVapiVehiclePosition(const OVapiVehiclePosition& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  delay_ = from.delay_;
  // @@protoc_insertion_point(copy_constructor:transit_realtime.OVapiVehiclePosition)
}

void OVapiVehiclePosition::SharedCtor() {
  _cached_size_ = 0;
  delay_ = 0;
}

OVapiVehiclePosition::~OVapiVehiclePosition() {
  // @@protoc_insertion_point(destructor:transit_realtime.OVapiVehiclePosition)
  SharedDtor();
}

void OVapiVehiclePosition::SharedDtor() {
}

void OVapiVehiclePosition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVapiVehiclePosition::descriptor() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[1].descriptor;
}

const OVapiVehiclePosition& OVapiVehiclePosition::default_instance() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVapiVehiclePosition* OVapiVehiclePosition::New(::google::protobuf::Arena* arena) const {
  OVapiVehiclePosition* n = new OVapiVehiclePosition;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVapiVehiclePosition::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.OVapiVehiclePosition)
  delay_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OVapiVehiclePosition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transit_realtime.OVapiVehiclePosition)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 delay = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_delay();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &delay_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transit_realtime.OVapiVehiclePosition)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transit_realtime.OVapiVehiclePosition)
  return false;
#undef DO_
}

void OVapiVehiclePosition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transit_realtime.OVapiVehiclePosition)
  // optional int32 delay = 1;
  if (has_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->delay(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transit_realtime.OVapiVehiclePosition)
}

::google::protobuf::uint8* OVapiVehiclePosition::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.OVapiVehiclePosition)
  // optional int32 delay = 1;
  if (has_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->delay(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.OVapiVehiclePosition)
  return target;
}

size_t OVapiVehiclePosition::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.OVapiVehiclePosition)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional int32 delay = 1;
  if (has_delay()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->delay());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVapiVehiclePosition::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transit_realtime.OVapiVehiclePosition)
  GOOGLE_DCHECK_NE(&from, this);
  const OVapiVehiclePosition* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVapiVehiclePosition>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transit_realtime.OVapiVehiclePosition)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transit_realtime.OVapiVehiclePosition)
    MergeFrom(*source);
  }
}

void OVapiVehiclePosition::MergeFrom(const OVapiVehiclePosition& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.OVapiVehiclePosition)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_delay()) {
    set_delay(from.delay());
  }
}

void OVapiVehiclePosition::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transit_realtime.OVapiVehiclePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVapiVehiclePosition::CopyFrom(const OVapiVehiclePosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.OVapiVehiclePosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVapiVehiclePosition::IsInitialized() const {
  return true;
}

void OVapiVehiclePosition::Swap(OVapiVehiclePosition* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVapiVehiclePosition::InternalSwap(OVapiVehiclePosition* other) {
  std::swap(delay_, other->delay_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVapiVehiclePosition::GetMetadata() const {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVapiVehiclePosition

// optional int32 delay = 1;
bool OVapiVehiclePosition::has_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OVapiVehiclePosition::set_has_delay() {
  _has_bits_[0] |= 0x00000001u;
}
void OVapiVehiclePosition::clear_has_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
void OVapiVehiclePosition::clear_delay() {
  delay_ = 0;
  clear_has_delay();
}
::google::protobuf::int32 OVapiVehiclePosition::delay() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiVehiclePosition.delay)
  return delay_;
}
void OVapiVehiclePosition::set_delay(::google::protobuf::int32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiVehiclePosition.delay)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVapiTripUpdate::kTripHeadsignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVapiTripUpdate::OVapiTripUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transit_realtime.OVapiTripUpdate)
}
OVapiTripUpdate::OVapiTripUpdate(const OVapiTripUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  trip_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_trip_headsign()) {
    trip_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trip_headsign_);
  }
  // @@protoc_insertion_point(copy_constructor:transit_realtime.OVapiTripUpdate)
}

void OVapiTripUpdate::SharedCtor() {
  _cached_size_ = 0;
  trip_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OVapiTripUpdate::~OVapiTripUpdate() {
  // @@protoc_insertion_point(destructor:transit_realtime.OVapiTripUpdate)
  SharedDtor();
}

void OVapiTripUpdate::SharedDtor() {
  trip_headsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OVapiTripUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVapiTripUpdate::descriptor() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[2].descriptor;
}

const OVapiTripUpdate& OVapiTripUpdate::default_instance() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVapiTripUpdate* OVapiTripUpdate::New(::google::protobuf::Arena* arena) const {
  OVapiTripUpdate* n = new OVapiTripUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVapiTripUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.OVapiTripUpdate)
  if (has_trip_headsign()) {
    GOOGLE_DCHECK(!trip_headsign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*trip_headsign_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OVapiTripUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transit_realtime.OVapiTripUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string trip_headsign = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_trip_headsign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->trip_headsign().data(), this->trip_headsign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiTripUpdate.trip_headsign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transit_realtime.OVapiTripUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transit_realtime.OVapiTripUpdate)
  return false;
#undef DO_
}

void OVapiTripUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transit_realtime.OVapiTripUpdate)
  // optional string trip_headsign = 1;
  if (has_trip_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trip_headsign().data(), this->trip_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripUpdate.trip_headsign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->trip_headsign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transit_realtime.OVapiTripUpdate)
}

::google::protobuf::uint8* OVapiTripUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.OVapiTripUpdate)
  // optional string trip_headsign = 1;
  if (has_trip_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->trip_headsign().data(), this->trip_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiTripUpdate.trip_headsign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->trip_headsign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.OVapiTripUpdate)
  return target;
}

size_t OVapiTripUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.OVapiTripUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string trip_headsign = 1;
  if (has_trip_headsign()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->trip_headsign());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVapiTripUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transit_realtime.OVapiTripUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const OVapiTripUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVapiTripUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transit_realtime.OVapiTripUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transit_realtime.OVapiTripUpdate)
    MergeFrom(*source);
  }
}

void OVapiTripUpdate::MergeFrom(const OVapiTripUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.OVapiTripUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_trip_headsign()) {
    set_has_trip_headsign();
    trip_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.trip_headsign_);
  }
}

void OVapiTripUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transit_realtime.OVapiTripUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVapiTripUpdate::CopyFrom(const OVapiTripUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.OVapiTripUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVapiTripUpdate::IsInitialized() const {
  return true;
}

void OVapiTripUpdate::Swap(OVapiTripUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVapiTripUpdate::InternalSwap(OVapiTripUpdate* other) {
  trip_headsign_.Swap(&other->trip_headsign_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVapiTripUpdate::GetMetadata() const {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVapiTripUpdate

// optional string trip_headsign = 1;
bool OVapiTripUpdate::has_trip_headsign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OVapiTripUpdate::set_has_trip_headsign() {
  _has_bits_[0] |= 0x00000001u;
}
void OVapiTripUpdate::clear_has_trip_headsign() {
  _has_bits_[0] &= ~0x00000001u;
}
void OVapiTripUpdate::clear_trip_headsign() {
  trip_headsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_trip_headsign();
}
const ::std::string& OVapiTripUpdate::trip_headsign() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiTripUpdate.trip_headsign)
  return trip_headsign_.GetNoArena();
}
void OVapiTripUpdate::set_trip_headsign(const ::std::string& value) {
  set_has_trip_headsign();
  trip_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiTripUpdate.trip_headsign)
}
#if LANG_CXX11
void OVapiTripUpdate::set_trip_headsign(::std::string&& value) {
  set_has_trip_headsign();
  trip_headsign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiTripUpdate.trip_headsign)
}
#endif
void OVapiTripUpdate::set_trip_headsign(const char* value) {
  set_has_trip_headsign();
  trip_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiTripUpdate.trip_headsign)
}
void OVapiTripUpdate::set_trip_headsign(const char* value, size_t size) {
  set_has_trip_headsign();
  trip_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiTripUpdate.trip_headsign)
}
::std::string* OVapiTripUpdate::mutable_trip_headsign() {
  set_has_trip_headsign();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiTripUpdate.trip_headsign)
  return trip_headsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiTripUpdate::release_trip_headsign() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiTripUpdate.trip_headsign)
  clear_has_trip_headsign();
  return trip_headsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiTripUpdate::set_allocated_trip_headsign(::std::string* trip_headsign) {
  if (trip_headsign != NULL) {
    set_has_trip_headsign();
  } else {
    clear_has_trip_headsign();
  }
  trip_headsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), trip_headsign);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiTripUpdate.trip_headsign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVapiStopTimeUpdate::kStopHeadsignFieldNumber;
const int OVapiStopTimeUpdate::kScheduledTrackFieldNumber;
const int OVapiStopTimeUpdate::kActualTrackFieldNumber;
const int OVapiStopTimeUpdate::kStationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVapiStopTimeUpdate::OVapiStopTimeUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transit_realtime.OVapiStopTimeUpdate)
}
OVapiStopTimeUpdate::OVapiStopTimeUpdate(const OVapiStopTimeUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stop_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_stop_headsign()) {
    stop_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stop_headsign_);
  }
  scheduled_track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_scheduled_track()) {
    scheduled_track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scheduled_track_);
  }
  actual_track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_actual_track()) {
    actual_track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actual_track_);
  }
  station_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_station_id()) {
    station_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.station_id_);
  }
  // @@protoc_insertion_point(copy_constructor:transit_realtime.OVapiStopTimeUpdate)
}

void OVapiStopTimeUpdate::SharedCtor() {
  _cached_size_ = 0;
  stop_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduled_track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actual_track_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  station_id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

OVapiStopTimeUpdate::~OVapiStopTimeUpdate() {
  // @@protoc_insertion_point(destructor:transit_realtime.OVapiStopTimeUpdate)
  SharedDtor();
}

void OVapiStopTimeUpdate::SharedDtor() {
  stop_headsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  scheduled_track_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  actual_track_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  station_id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OVapiStopTimeUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVapiStopTimeUpdate::descriptor() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[3].descriptor;
}

const OVapiStopTimeUpdate& OVapiStopTimeUpdate::default_instance() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVapiStopTimeUpdate* OVapiStopTimeUpdate::New(::google::protobuf::Arena* arena) const {
  OVapiStopTimeUpdate* n = new OVapiStopTimeUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVapiStopTimeUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.OVapiStopTimeUpdate)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_stop_headsign()) {
      GOOGLE_DCHECK(!stop_headsign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*stop_headsign_.UnsafeRawStringPointer())->clear();
    }
    if (has_scheduled_track()) {
      GOOGLE_DCHECK(!scheduled_track_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*scheduled_track_.UnsafeRawStringPointer())->clear();
    }
    if (has_actual_track()) {
      GOOGLE_DCHECK(!actual_track_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*actual_track_.UnsafeRawStringPointer())->clear();
    }
    if (has_station_id()) {
      GOOGLE_DCHECK(!station_id_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*station_id_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OVapiStopTimeUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transit_realtime.OVapiStopTimeUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string stop_headsign = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_stop_headsign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->stop_headsign().data(), this->stop_headsign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiStopTimeUpdate.stop_headsign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string scheduled_track = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_scheduled_track()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->scheduled_track().data(), this->scheduled_track().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiStopTimeUpdate.scheduled_track");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string actual_track = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_actual_track()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->actual_track().data(), this->actual_track().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiStopTimeUpdate.actual_track");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string station_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_station_id()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->station_id().data(), this->station_id().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiStopTimeUpdate.station_id");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transit_realtime.OVapiStopTimeUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transit_realtime.OVapiStopTimeUpdate)
  return false;
#undef DO_
}

void OVapiStopTimeUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transit_realtime.OVapiStopTimeUpdate)
  // optional string stop_headsign = 1;
  if (has_stop_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_headsign().data(), this->stop_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.stop_headsign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->stop_headsign(), output);
  }

  // optional string scheduled_track = 2;
  if (has_scheduled_track()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scheduled_track().data(), this->scheduled_track().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.scheduled_track");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->scheduled_track(), output);
  }

  // optional string actual_track = 3;
  if (has_actual_track()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actual_track().data(), this->actual_track().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.actual_track");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->actual_track(), output);
  }

  // optional string station_id = 4;
  if (has_station_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->station_id().data(), this->station_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.station_id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->station_id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transit_realtime.OVapiStopTimeUpdate)
}

::google::protobuf::uint8* OVapiStopTimeUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.OVapiStopTimeUpdate)
  // optional string stop_headsign = 1;
  if (has_stop_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->stop_headsign().data(), this->stop_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.stop_headsign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->stop_headsign(), target);
  }

  // optional string scheduled_track = 2;
  if (has_scheduled_track()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->scheduled_track().data(), this->scheduled_track().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.scheduled_track");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->scheduled_track(), target);
  }

  // optional string actual_track = 3;
  if (has_actual_track()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->actual_track().data(), this->actual_track().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.actual_track");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->actual_track(), target);
  }

  // optional string station_id = 4;
  if (has_station_id()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->station_id().data(), this->station_id().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiStopTimeUpdate.station_id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->station_id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.OVapiStopTimeUpdate)
  return target;
}

size_t OVapiStopTimeUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.OVapiStopTimeUpdate)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string stop_headsign = 1;
    if (has_stop_headsign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->stop_headsign());
    }

    // optional string scheduled_track = 2;
    if (has_scheduled_track()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->scheduled_track());
    }

    // optional string actual_track = 3;
    if (has_actual_track()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->actual_track());
    }

    // optional string station_id = 4;
    if (has_station_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->station_id());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVapiStopTimeUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transit_realtime.OVapiStopTimeUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const OVapiStopTimeUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVapiStopTimeUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transit_realtime.OVapiStopTimeUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transit_realtime.OVapiStopTimeUpdate)
    MergeFrom(*source);
  }
}

void OVapiStopTimeUpdate::MergeFrom(const OVapiStopTimeUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.OVapiStopTimeUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_stop_headsign()) {
      set_has_stop_headsign();
      stop_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.stop_headsign_);
    }
    if (from.has_scheduled_track()) {
      set_has_scheduled_track();
      scheduled_track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.scheduled_track_);
    }
    if (from.has_actual_track()) {
      set_has_actual_track();
      actual_track_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.actual_track_);
    }
    if (from.has_station_id()) {
      set_has_station_id();
      station_id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.station_id_);
    }
  }
}

void OVapiStopTimeUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transit_realtime.OVapiStopTimeUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVapiStopTimeUpdate::CopyFrom(const OVapiStopTimeUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.OVapiStopTimeUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVapiStopTimeUpdate::IsInitialized() const {
  return true;
}

void OVapiStopTimeUpdate::Swap(OVapiStopTimeUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVapiStopTimeUpdate::InternalSwap(OVapiStopTimeUpdate* other) {
  stop_headsign_.Swap(&other->stop_headsign_);
  scheduled_track_.Swap(&other->scheduled_track_);
  actual_track_.Swap(&other->actual_track_);
  station_id_.Swap(&other->station_id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVapiStopTimeUpdate::GetMetadata() const {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVapiStopTimeUpdate

// optional string stop_headsign = 1;
bool OVapiStopTimeUpdate::has_stop_headsign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OVapiStopTimeUpdate::set_has_stop_headsign() {
  _has_bits_[0] |= 0x00000001u;
}
void OVapiStopTimeUpdate::clear_has_stop_headsign() {
  _has_bits_[0] &= ~0x00000001u;
}
void OVapiStopTimeUpdate::clear_stop_headsign() {
  stop_headsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_stop_headsign();
}
const ::std::string& OVapiStopTimeUpdate::stop_headsign() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
  return stop_headsign_.GetNoArena();
}
void OVapiStopTimeUpdate::set_stop_headsign(const ::std::string& value) {
  set_has_stop_headsign();
  stop_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
}
#if LANG_CXX11
void OVapiStopTimeUpdate::set_stop_headsign(::std::string&& value) {
  set_has_stop_headsign();
  stop_headsign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
}
#endif
void OVapiStopTimeUpdate::set_stop_headsign(const char* value) {
  set_has_stop_headsign();
  stop_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
}
void OVapiStopTimeUpdate::set_stop_headsign(const char* value, size_t size) {
  set_has_stop_headsign();
  stop_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
}
::std::string* OVapiStopTimeUpdate::mutable_stop_headsign() {
  set_has_stop_headsign();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
  return stop_headsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiStopTimeUpdate::release_stop_headsign() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
  clear_has_stop_headsign();
  return stop_headsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiStopTimeUpdate::set_allocated_stop_headsign(::std::string* stop_headsign) {
  if (stop_headsign != NULL) {
    set_has_stop_headsign();
  } else {
    clear_has_stop_headsign();
  }
  stop_headsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stop_headsign);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiStopTimeUpdate.stop_headsign)
}

// optional string scheduled_track = 2;
bool OVapiStopTimeUpdate::has_scheduled_track() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OVapiStopTimeUpdate::set_has_scheduled_track() {
  _has_bits_[0] |= 0x00000002u;
}
void OVapiStopTimeUpdate::clear_has_scheduled_track() {
  _has_bits_[0] &= ~0x00000002u;
}
void OVapiStopTimeUpdate::clear_scheduled_track() {
  scheduled_track_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_scheduled_track();
}
const ::std::string& OVapiStopTimeUpdate::scheduled_track() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
  return scheduled_track_.GetNoArena();
}
void OVapiStopTimeUpdate::set_scheduled_track(const ::std::string& value) {
  set_has_scheduled_track();
  scheduled_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
}
#if LANG_CXX11
void OVapiStopTimeUpdate::set_scheduled_track(::std::string&& value) {
  set_has_scheduled_track();
  scheduled_track_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
}
#endif
void OVapiStopTimeUpdate::set_scheduled_track(const char* value) {
  set_has_scheduled_track();
  scheduled_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
}
void OVapiStopTimeUpdate::set_scheduled_track(const char* value, size_t size) {
  set_has_scheduled_track();
  scheduled_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
}
::std::string* OVapiStopTimeUpdate::mutable_scheduled_track() {
  set_has_scheduled_track();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
  return scheduled_track_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiStopTimeUpdate::release_scheduled_track() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
  clear_has_scheduled_track();
  return scheduled_track_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiStopTimeUpdate::set_allocated_scheduled_track(::std::string* scheduled_track) {
  if (scheduled_track != NULL) {
    set_has_scheduled_track();
  } else {
    clear_has_scheduled_track();
  }
  scheduled_track_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), scheduled_track);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiStopTimeUpdate.scheduled_track)
}

// optional string actual_track = 3;
bool OVapiStopTimeUpdate::has_actual_track() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OVapiStopTimeUpdate::set_has_actual_track() {
  _has_bits_[0] |= 0x00000004u;
}
void OVapiStopTimeUpdate::clear_has_actual_track() {
  _has_bits_[0] &= ~0x00000004u;
}
void OVapiStopTimeUpdate::clear_actual_track() {
  actual_track_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_actual_track();
}
const ::std::string& OVapiStopTimeUpdate::actual_track() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiStopTimeUpdate.actual_track)
  return actual_track_.GetNoArena();
}
void OVapiStopTimeUpdate::set_actual_track(const ::std::string& value) {
  set_has_actual_track();
  actual_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiStopTimeUpdate.actual_track)
}
#if LANG_CXX11
void OVapiStopTimeUpdate::set_actual_track(::std::string&& value) {
  set_has_actual_track();
  actual_track_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiStopTimeUpdate.actual_track)
}
#endif
void OVapiStopTimeUpdate::set_actual_track(const char* value) {
  set_has_actual_track();
  actual_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiStopTimeUpdate.actual_track)
}
void OVapiStopTimeUpdate::set_actual_track(const char* value, size_t size) {
  set_has_actual_track();
  actual_track_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiStopTimeUpdate.actual_track)
}
::std::string* OVapiStopTimeUpdate::mutable_actual_track() {
  set_has_actual_track();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiStopTimeUpdate.actual_track)
  return actual_track_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiStopTimeUpdate::release_actual_track() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiStopTimeUpdate.actual_track)
  clear_has_actual_track();
  return actual_track_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiStopTimeUpdate::set_allocated_actual_track(::std::string* actual_track) {
  if (actual_track != NULL) {
    set_has_actual_track();
  } else {
    clear_has_actual_track();
  }
  actual_track_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), actual_track);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiStopTimeUpdate.actual_track)
}

// optional string station_id = 4;
bool OVapiStopTimeUpdate::has_station_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OVapiStopTimeUpdate::set_has_station_id() {
  _has_bits_[0] |= 0x00000008u;
}
void OVapiStopTimeUpdate::clear_has_station_id() {
  _has_bits_[0] &= ~0x00000008u;
}
void OVapiStopTimeUpdate::clear_station_id() {
  station_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_station_id();
}
const ::std::string& OVapiStopTimeUpdate::station_id() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiStopTimeUpdate.station_id)
  return station_id_.GetNoArena();
}
void OVapiStopTimeUpdate::set_station_id(const ::std::string& value) {
  set_has_station_id();
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiStopTimeUpdate.station_id)
}
#if LANG_CXX11
void OVapiStopTimeUpdate::set_station_id(::std::string&& value) {
  set_has_station_id();
  station_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiStopTimeUpdate.station_id)
}
#endif
void OVapiStopTimeUpdate::set_station_id(const char* value) {
  set_has_station_id();
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiStopTimeUpdate.station_id)
}
void OVapiStopTimeUpdate::set_station_id(const char* value, size_t size) {
  set_has_station_id();
  station_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiStopTimeUpdate.station_id)
}
::std::string* OVapiStopTimeUpdate::mutable_station_id() {
  set_has_station_id();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiStopTimeUpdate.station_id)
  return station_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiStopTimeUpdate::release_station_id() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiStopTimeUpdate.station_id)
  clear_has_station_id();
  return station_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiStopTimeUpdate::set_allocated_station_id(::std::string* station_id) {
  if (station_id != NULL) {
    set_has_station_id();
  } else {
    clear_has_station_id();
  }
  station_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), station_id);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiStopTimeUpdate.station_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OVapiVehicleDescriptor::kWheelchairAccessibleFieldNumber;
const int OVapiVehicleDescriptor::kVehicleTypeFieldNumber;
const int OVapiVehicleDescriptor::kVehicleHeadsignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OVapiVehicleDescriptor::OVapiVehicleDescriptor()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:transit_realtime.OVapiVehicleDescriptor)
}
OVapiVehicleDescriptor::OVapiVehicleDescriptor(const OVapiVehicleDescriptor& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vehicle_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicle_type()) {
    vehicle_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicle_type_);
  }
  vehicle_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vehicle_headsign()) {
    vehicle_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicle_headsign_);
  }
  wheelchair_accessible_ = from.wheelchair_accessible_;
  // @@protoc_insertion_point(copy_constructor:transit_realtime.OVapiVehicleDescriptor)
}

void OVapiVehicleDescriptor::SharedCtor() {
  _cached_size_ = 0;
  vehicle_type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicle_headsign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wheelchair_accessible_ = false;
}

OVapiVehicleDescriptor::~OVapiVehicleDescriptor() {
  // @@protoc_insertion_point(destructor:transit_realtime.OVapiVehicleDescriptor)
  SharedDtor();
}

void OVapiVehicleDescriptor::SharedDtor() {
  vehicle_type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vehicle_headsign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OVapiVehicleDescriptor::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OVapiVehicleDescriptor::descriptor() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[4].descriptor;
}

const OVapiVehicleDescriptor& OVapiVehicleDescriptor::default_instance() {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::InitDefaults();
  return *internal_default_instance();
}

OVapiVehicleDescriptor* OVapiVehicleDescriptor::New(::google::protobuf::Arena* arena) const {
  OVapiVehicleDescriptor* n = new OVapiVehicleDescriptor;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OVapiVehicleDescriptor::Clear() {
// @@protoc_insertion_point(message_clear_start:transit_realtime.OVapiVehicleDescriptor)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_vehicle_type()) {
      GOOGLE_DCHECK(!vehicle_type_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vehicle_type_.UnsafeRawStringPointer())->clear();
    }
    if (has_vehicle_headsign()) {
      GOOGLE_DCHECK(!vehicle_headsign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vehicle_headsign_.UnsafeRawStringPointer())->clear();
    }
  }
  wheelchair_accessible_ = false;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OVapiVehicleDescriptor::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:transit_realtime.OVapiVehicleDescriptor)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bool wheelchair_accessible = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_wheelchair_accessible();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &wheelchair_accessible_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vehicle_type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicle_type()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicle_type().data(), this->vehicle_type().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiVehicleDescriptor.vehicle_type");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vehicle_headsign = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vehicle_headsign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vehicle_headsign().data(), this->vehicle_headsign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "transit_realtime.OVapiVehicleDescriptor.vehicle_headsign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:transit_realtime.OVapiVehicleDescriptor)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:transit_realtime.OVapiVehicleDescriptor)
  return false;
#undef DO_
}

void OVapiVehicleDescriptor::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:transit_realtime.OVapiVehicleDescriptor)
  // optional bool wheelchair_accessible = 1;
  if (has_wheelchair_accessible()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->wheelchair_accessible(), output);
  }

  // optional string vehicle_type = 2;
  if (has_vehicle_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicle_type().data(), this->vehicle_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiVehicleDescriptor.vehicle_type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->vehicle_type(), output);
  }

  // optional string vehicle_headsign = 3;
  if (has_vehicle_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicle_headsign().data(), this->vehicle_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiVehicleDescriptor.vehicle_headsign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->vehicle_headsign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:transit_realtime.OVapiVehicleDescriptor)
}

::google::protobuf::uint8* OVapiVehicleDescriptor::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:transit_realtime.OVapiVehicleDescriptor)
  // optional bool wheelchair_accessible = 1;
  if (has_wheelchair_accessible()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->wheelchair_accessible(), target);
  }

  // optional string vehicle_type = 2;
  if (has_vehicle_type()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicle_type().data(), this->vehicle_type().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiVehicleDescriptor.vehicle_type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->vehicle_type(), target);
  }

  // optional string vehicle_headsign = 3;
  if (has_vehicle_headsign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vehicle_headsign().data(), this->vehicle_headsign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "transit_realtime.OVapiVehicleDescriptor.vehicle_headsign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->vehicle_headsign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:transit_realtime.OVapiVehicleDescriptor)
  return target;
}

size_t OVapiVehicleDescriptor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:transit_realtime.OVapiVehicleDescriptor)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string vehicle_type = 2;
    if (has_vehicle_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vehicle_type());
    }

    // optional string vehicle_headsign = 3;
    if (has_vehicle_headsign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vehicle_headsign());
    }

    // optional bool wheelchair_accessible = 1;
    if (has_wheelchair_accessible()) {
      total_size += 1 + 1;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OVapiVehicleDescriptor::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:transit_realtime.OVapiVehicleDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  const OVapiVehicleDescriptor* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OVapiVehicleDescriptor>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:transit_realtime.OVapiVehicleDescriptor)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:transit_realtime.OVapiVehicleDescriptor)
    MergeFrom(*source);
  }
}

void OVapiVehicleDescriptor::MergeFrom(const OVapiVehicleDescriptor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:transit_realtime.OVapiVehicleDescriptor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_vehicle_type()) {
      set_has_vehicle_type();
      vehicle_type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicle_type_);
    }
    if (from.has_vehicle_headsign()) {
      set_has_vehicle_headsign();
      vehicle_headsign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vehicle_headsign_);
    }
    if (from.has_wheelchair_accessible()) {
      set_wheelchair_accessible(from.wheelchair_accessible());
    }
  }
}

void OVapiVehicleDescriptor::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:transit_realtime.OVapiVehicleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OVapiVehicleDescriptor::CopyFrom(const OVapiVehicleDescriptor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:transit_realtime.OVapiVehicleDescriptor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OVapiVehicleDescriptor::IsInitialized() const {
  return true;
}

void OVapiVehicleDescriptor::Swap(OVapiVehicleDescriptor* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OVapiVehicleDescriptor::InternalSwap(OVapiVehicleDescriptor* other) {
  vehicle_type_.Swap(&other->vehicle_type_);
  vehicle_headsign_.Swap(&other->vehicle_headsign_);
  std::swap(wheelchair_accessible_, other->wheelchair_accessible_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OVapiVehicleDescriptor::GetMetadata() const {
  protobuf_gtfs_2drealtime_2dOVapi_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_gtfs_2drealtime_2dOVapi_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OVapiVehicleDescriptor

// optional bool wheelchair_accessible = 1;
bool OVapiVehicleDescriptor::has_wheelchair_accessible() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OVapiVehicleDescriptor::set_has_wheelchair_accessible() {
  _has_bits_[0] |= 0x00000004u;
}
void OVapiVehicleDescriptor::clear_has_wheelchair_accessible() {
  _has_bits_[0] &= ~0x00000004u;
}
void OVapiVehicleDescriptor::clear_wheelchair_accessible() {
  wheelchair_accessible_ = false;
  clear_has_wheelchair_accessible();
}
bool OVapiVehicleDescriptor::wheelchair_accessible() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiVehicleDescriptor.wheelchair_accessible)
  return wheelchair_accessible_;
}
void OVapiVehicleDescriptor::set_wheelchair_accessible(bool value) {
  set_has_wheelchair_accessible();
  wheelchair_accessible_ = value;
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiVehicleDescriptor.wheelchair_accessible)
}

// optional string vehicle_type = 2;
bool OVapiVehicleDescriptor::has_vehicle_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OVapiVehicleDescriptor::set_has_vehicle_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OVapiVehicleDescriptor::clear_has_vehicle_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OVapiVehicleDescriptor::clear_vehicle_type() {
  vehicle_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vehicle_type();
}
const ::std::string& OVapiVehicleDescriptor::vehicle_type() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
  return vehicle_type_.GetNoArena();
}
void OVapiVehicleDescriptor::set_vehicle_type(const ::std::string& value) {
  set_has_vehicle_type();
  vehicle_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
}
#if LANG_CXX11
void OVapiVehicleDescriptor::set_vehicle_type(::std::string&& value) {
  set_has_vehicle_type();
  vehicle_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
}
#endif
void OVapiVehicleDescriptor::set_vehicle_type(const char* value) {
  set_has_vehicle_type();
  vehicle_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
}
void OVapiVehicleDescriptor::set_vehicle_type(const char* value, size_t size) {
  set_has_vehicle_type();
  vehicle_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
}
::std::string* OVapiVehicleDescriptor::mutable_vehicle_type() {
  set_has_vehicle_type();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
  return vehicle_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiVehicleDescriptor::release_vehicle_type() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
  clear_has_vehicle_type();
  return vehicle_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiVehicleDescriptor::set_allocated_vehicle_type(::std::string* vehicle_type) {
  if (vehicle_type != NULL) {
    set_has_vehicle_type();
  } else {
    clear_has_vehicle_type();
  }
  vehicle_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_type);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiVehicleDescriptor.vehicle_type)
}

// optional string vehicle_headsign = 3;
bool OVapiVehicleDescriptor::has_vehicle_headsign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OVapiVehicleDescriptor::set_has_vehicle_headsign() {
  _has_bits_[0] |= 0x00000002u;
}
void OVapiVehicleDescriptor::clear_has_vehicle_headsign() {
  _has_bits_[0] &= ~0x00000002u;
}
void OVapiVehicleDescriptor::clear_vehicle_headsign() {
  vehicle_headsign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vehicle_headsign();
}
const ::std::string& OVapiVehicleDescriptor::vehicle_headsign() const {
  // @@protoc_insertion_point(field_get:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
  return vehicle_headsign_.GetNoArena();
}
void OVapiVehicleDescriptor::set_vehicle_headsign(const ::std::string& value) {
  set_has_vehicle_headsign();
  vehicle_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
}
#if LANG_CXX11
void OVapiVehicleDescriptor::set_vehicle_headsign(::std::string&& value) {
  set_has_vehicle_headsign();
  vehicle_headsign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
}
#endif
void OVapiVehicleDescriptor::set_vehicle_headsign(const char* value) {
  set_has_vehicle_headsign();
  vehicle_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
}
void OVapiVehicleDescriptor::set_vehicle_headsign(const char* value, size_t size) {
  set_has_vehicle_headsign();
  vehicle_headsign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
}
::std::string* OVapiVehicleDescriptor::mutable_vehicle_headsign() {
  set_has_vehicle_headsign();
  // @@protoc_insertion_point(field_mutable:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
  return vehicle_headsign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OVapiVehicleDescriptor::release_vehicle_headsign() {
  // @@protoc_insertion_point(field_release:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
  clear_has_vehicle_headsign();
  return vehicle_headsign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OVapiVehicleDescriptor::set_allocated_vehicle_headsign(::std::string* vehicle_headsign) {
  if (vehicle_headsign != NULL) {
    set_has_vehicle_headsign();
  } else {
    clear_has_vehicle_headsign();
  }
  vehicle_headsign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vehicle_headsign);
  // @@protoc_insertion_point(field_set_allocated:transit_realtime.OVapiVehicleDescriptor.vehicle_headsign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::TripDescriptor,
    ::google::protobuf::internal::MessageTypeTraits< ::transit_realtime::OVapiTripDescriptor >, 11, false >
  ovapi_tripdescriptor(kOvapiTripdescriptorFieldNumber, *::transit_realtime::OVapiTripDescriptor::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::VehiclePosition,
    ::google::protobuf::internal::MessageTypeTraits< ::transit_realtime::OVapiVehiclePosition >, 11, false >
  ovapi_vehicle_position(kOvapiVehiclePositionFieldNumber, *::transit_realtime::OVapiVehiclePosition::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::TripUpdate,
    ::google::protobuf::internal::MessageTypeTraits< ::transit_realtime::OVapiTripUpdate >, 11, false >
  ovapi_trip_update(kOvapiTripUpdateFieldNumber, *::transit_realtime::OVapiTripUpdate::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::TripUpdate_StopTimeUpdate,
    ::google::protobuf::internal::MessageTypeTraits< ::transit_realtime::OVapiStopTimeUpdate >, 11, false >
  ovapi_stop_time_update(kOvapiStopTimeUpdateFieldNumber, *::transit_realtime::OVapiStopTimeUpdate::internal_default_instance());
::google::protobuf::internal::ExtensionIdentifier< ::transit_realtime::VehicleDescriptor,
    ::google::protobuf::internal::MessageTypeTraits< ::transit_realtime::OVapiVehicleDescriptor >, 11, false >
  ovapi_vehicle_descriptor(kOvapiVehicleDescriptorFieldNumber, *::transit_realtime::OVapiVehicleDescriptor::internal_default_instance());

// @@protoc_insertion_point(namespace_scope)

}  // namespace transit_realtime

// @@protoc_insertion_point(global_scope)
